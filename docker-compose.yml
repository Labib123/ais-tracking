version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  postgres:
    image: postgis/postgis
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: ais_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  ais-producer:
    build: ./services
    container_name: ais-producer
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
    command: ["python", "producer.py"]

  ais-validator:
    build: ./services
    container_name: ais-validator
    environment:
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka
    command: ["python", "validator.py"]

  ais-db-consumer:
    build: ./services
    container_name: ais-db-consumer
    environment:
      KAFKA_BROKER: kafka:9092
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASS: password
      DB_NAME: ais_db
    depends_on:
      - kafka
      - postgres
    command: ["python", "db_consumer.py"]
